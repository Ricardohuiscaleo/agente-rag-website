import { GoogleGenerativeAI } from '@google/generative-ai';
import { B as BlogService } from '../../../chunks/blogService_C2-nrjpO.mjs';
export { renderers } from '../../../renderers.mjs';

const apiKey = "AIzaSyCc1bdkzVLHXxxKOBndV3poK2KQikLJ6DI";
const genAI = new GoogleGenerativeAI(apiKey);
const TEMAS_PREDEFINIDOS = [
  {
    id: "llm",
    nombre: "Large Language Models",
    emoji: "üß†",
    descripcion: "Modelos de lenguaje y sus aplicaciones",
    keywords: ["LLM", "GPT", "Transformers", "NLP", "ChatGPT", "Claude", "Gemini"],
    prompt: "Escribe un art√≠culo completo y actualizado sobre Large Language Models (LLM). Incluye los √∫ltimos avances, modelos m√°s populares como GPT-4, Claude, Gemini, aplicaciones pr√°cticas, beneficios, desaf√≠os y tendencias futuras. El art√≠culo debe ser informativo, profesional y accesible."
  },
  {
    id: "rag",
    nombre: "RAG (Retrieval Augmented Generation)",
    emoji: "üîç",
    descripcion: "Sistemas de generaci√≥n aumentada por recuperaci√≥n",
    keywords: ["RAG", "Vector DB", "Embeddings", "Retrieval", "Knowledge Base"],
    prompt: "Crea un art√≠culo detallado sobre RAG (Retrieval Augmented Generation). Explica c√≥mo funciona, sus ventajas sobre modelos tradicionales, casos de uso empresariales, implementaci√≥n t√©cnica, herramientas populares y mejores pr√°cticas. Incluye ejemplos reales y comparaciones."
  },
  {
    id: "ia-generativa",
    nombre: "IA Generativa",
    emoji: "üé®",
    descripci√≥n: "Inteligencia artificial para crear contenido",
    keywords: ["Generative AI", "DALL-E", "Midjourney", "Stable Diffusion", "Content Creation"],
    prompt: "Desarrolla un art√≠culo sobre IA Generativa. Cubre la generaci√≥n de texto, im√°genes, c√≥digo, m√∫sica y video. Analiza herramientas como DALL-E, Midjourney, Runway, impacto en industrias creativas, consideraciones √©ticas y el futuro de la creatividad artificial."
  },
  {
    id: "machine-learning",
    nombre: "Machine Learning",
    emoji: "‚ö°",
    descripcion: "Aprendizaje autom√°tico y algoritmos",
    keywords: [
      "ML",
      "Deep Learning",
      "Neural Networks",
      "Supervised Learning",
      "Unsupervised Learning"
    ],
    prompt: "Escribe un art√≠culo completo sobre Machine Learning. Incluye conceptos fundamentales, tipos de aprendizaje, algoritmos populares, aplicaciones en la industria, herramientas y frameworks, y las √∫ltimas tendencias en ML para 2025."
  },
  {
    id: "computer-vision",
    nombre: "Computer Vision",
    emoji: "üëÅÔ∏è",
    descripcion: "Visi√≥n por computadora y an√°lisis de im√°genes",
    keywords: [
      "Computer Vision",
      "Image Recognition",
      "Object Detection",
      "OCR",
      "Medical Imaging"
    ],
    prompt: "Crea un art√≠culo sobre Computer Vision. Explica t√©cnicas de procesamiento de im√°genes, reconocimiento de objetos, detecci√≥n facial, aplicaciones en medicina, automoci√≥n, seguridad, y los √∫ltimos avances en visi√≥n artificial."
  },
  {
    id: "nlp",
    nombre: "Procesamiento de Lenguaje Natural",
    emoji: "üí¨",
    descripcion: "NLP y comprensi√≥n del lenguaje humano",
    keywords: [
      "NLP",
      "Natural Language Processing",
      "Sentiment Analysis",
      "Text Mining",
      "Chatbots"
    ],
    prompt: "Desarrolla un art√≠culo sobre Procesamiento de Lenguaje Natural (NLP). Cubre an√°lisis de sentimientos, traducci√≥n autom√°tica, chatbots, extracci√≥n de informaci√≥n, y c√≥mo el NLP est√° revolucionando la comunicaci√≥n humano-m√°quina."
  },
  {
    id: "automatizacion-ia",
    nombre: "Automatizaci√≥n con IA",
    emoji: "ü§ñ",
    descripcion: "Automatizaci√≥n de procesos con inteligencia artificial",
    keywords: ["RPA", "Automation", "Process Mining", "Workflow", "Business Intelligence"],
    prompt: "Escribe sobre Automatizaci√≥n con IA. Analiza RPA (Robotic Process Automation), automatizaci√≥n de workflows, impacto en empleos, casos de √©xito empresarial, herramientas como n8n, Zapier, y el futuro del trabajo automatizado."
  },
  {
    id: "etica-ia",
    nombre: "√âtica en IA",
    emoji: "‚öñÔ∏è",
    descripcion: "Consideraciones √©ticas y responsables en IA",
    keywords: ["AI Ethics", "Bias", "Fairness", "Transparency", "Responsible AI"],
    prompt: "Crea un art√≠culo sobre √âtica en IA. Discute sesgos algor√≠tmicos, transparencia, responsabilidad, regulaciones como el AI Act de la UE, privacidad de datos, y c√≥mo desarrollar IA de manera √©tica y responsable."
  }
];
class GeminiAIService {
  static {
    this.model = genAI.getGenerativeModel({ model: "gemini-2.0-flash" });
  }
  /**
   * Limpiar contenido generado eliminando bloques de c√≥digo markdown innecesarios
   */
  static limpiarContenido(contenido) {
    return contenido.replace(/^```markdown\s*/i, "").replace(/\s*```\s*$/i, "").replace(/^```\s*/i, "").replace(/\s*```\s*$/i, "").trim();
  }
  /**
   * Generar URL de imagen desde Unsplash basada en keywords del tema
   */
  static async generarImagenURL(tema, keywords) {
    try {
      const accessKey = process.env.UNSPLASH_ACCESS_KEY || "BanqJYPHGfqqCACbct84AzuSYYJ3mGxme_O5j-rA8as";
      console.log("üîë Unsplash Access Key presente:", !!accessKey);
      if (!accessKey) ;
      const getVisualTerms = (keywords2) => {
        const visualMapping = {
          // AI/ML Terms -> Visual concepts
          LLM: ["artificial intelligence", "technology", "computer science", "future tech"],
          GPT: ["ai technology", "computer brain", "digital innovation"],
          "AI Ethics": ["ethics", "balance", "justice", "responsibility"],
          Bias: ["balance", "equality", "fairness", "justice"],
          Fairness: ["balance", "equality", "scales", "justice"],
          Transparency: ["glass", "clear", "transparency", "crystal"],
          RAG: ["search", "database", "information", "research"],
          "Vector DB": ["data", "network", "connections", "abstract"],
          Embeddings: ["network", "connections", "abstract patterns"],
          "Generative AI": ["creativity", "art", "creation", "digital art"],
          "DALL-E": ["digital art", "creativity", "artificial art"],
          Midjourney: ["art", "creativity", "digital creation"],
          "Deep Learning": ["neural network", "brain", "technology"],
          "Neural Networks": ["network", "connections", "brain patterns"],
          "Computer Vision": ["eyes", "vision", "cameras", "surveillance"],
          "Image Recognition": ["camera", "lens", "photography", "eyes"],
          NLP: ["communication", "language", "speech", "conversation"],
          Chatbots: ["conversation", "communication", "chat", "messaging"],
          RPA: ["automation", "robots", "machinery", "efficiency"],
          Automation: ["robots", "machinery", "gear", "efficiency"],
          "Machine Learning": ["learning", "education", "technology", "computer"]
        };
        const visualTerms2 = [];
        keywords2.forEach((keyword) => {
          const mapped = visualMapping[keyword];
          if (mapped) {
            visualTerms2.push(...mapped);
          } else {
            visualTerms2.push("technology", "digital", "innovation");
          }
        });
        return Array.from(new Set(visualTerms2));
      };
      const visualTerms = getVisualTerms(keywords);
      const searchTerms = [
        // T√©rminos espec√≠ficos mapeados
        ...visualTerms.slice(0, 3),
        // T√©rminos gen√©ricos de tecnolog√≠a con alta probabilidad
        "technology",
        "computer",
        "digital",
        "innovation",
        "business",
        "office",
        "modern",
        "abstract",
        "network",
        "data"
      ].filter(Boolean);
      console.log("üéØ T√©rminos de b√∫squeda optimizados:", searchTerms.slice(0, 5));
      for (const searchTerm of searchTerms) {
        console.log(`üîç Buscando imagen en Unsplash para: "${searchTerm}"`);
        try {
          const response = await fetch(
            `https://api.unsplash.com/search/photos?query=${encodeURIComponent(searchTerm)}&per_page=10&orientation=landscape&order_by=relevant`,
            {
              headers: {
                Authorization: `Client-ID ${accessKey}`
              }
            }
          );
          if (!response.ok) {
            console.error("‚ùå Error de Unsplash API:", response.status, response.statusText);
            continue;
          }
          const data = await response.json();
          console.log(`üìä Resultados de Unsplash para "${searchTerm}":`, data.results?.length || 0);
          if (data.results && data.results.length > 0) {
            const randomIndex = Math.floor(Math.random() * Math.min(data.results.length, 10));
            const image = data.results[randomIndex];
            const imageUrl = image.urls.regular;
            console.log("‚úÖ Imagen encontrada:", imageUrl);
            console.log("üì∑ Fot√≥grafo:", image.user.name);
            return imageUrl;
          }
        } catch (fetchError) {
          console.error(`‚ùå Error buscando "${searchTerm}":`, fetchError);
          continue;
        }
      }
      console.log("‚ö†Ô∏è No se encontraron resultados para ning√∫n t√©rmino de b√∫squeda");
      return `https://via.placeholder.com/800x400/3b82f6/ffffff?text=${encodeURIComponent(tema.split(" ")[0])}`;
    } catch (error) {
      console.error("‚ùå Error general obteniendo imagen de Unsplash:", error);
      return `https://via.placeholder.com/800x400/ef4444/ffffff?text=${encodeURIComponent("Error")}`;
    }
  }
  /**
   * üÜï NUEVA FUNCIONALIDAD: Generar t√≠tulos √∫nicos y diversos
   */
  static async generarTituloUnico(tema, fechaActual) {
    const enfoques = {
      "etica-ia": [
        "Construyendo IA Responsable: El Futuro de la Tecnolog√≠a √âtica",
        "Sesgos Algor√≠tmicos: C√≥mo Crear Sistemas Justos e Inclusivos",
        "IA Transparente: Principios para el Desarrollo Responsable",
        "El Dilema √âtico de la Inteligencia Artificial en {a√±o}",
        "Regulaci√≥n vs Innovaci√≥n: El Balance Perfecto en IA",
        "Privacidad Digital: Protegiendo Datos en la Era de la IA",
        "IA Inclusiva: Eliminando Sesgos de G√©nero y Raza",
        "El C√≥digo de √âtica que Toda Empresa de IA Necesita"
      ],
      llm: [
        "GPT-4 vs Claude vs Gemini: La Batalla de los Titanes LLM",
        "Large Language Models: Revolucionando la Comunicaci√≥n Humana",
        "El Poder Oculto de los Modelos de Lenguaje Masivos",
        "LLM en Empresas: Casos de Uso que Transforman Industrias",
        "Optimizando Prompts: El Arte de Comunicarse con IA",
        "Multimodalidad en LLM: Texto, Imagen y Audio Unificados",
        "Fine-Tuning de Modelos: Personalizaci√≥n Empresarial Avanzada",
        "El Futuro del Trabajo con Large Language Models"
      ],
      rag: [
        "RAG vs Fine-Tuning: ¬øCu√°l Elegir para tu Proyecto?",
        "Vector Databases: El Motor Secreto detr√°s de RAG",
        "Implementando RAG: De Prototipo a Producci√≥n",
        "Embeddings Avanzados: Mejorando la Precisi√≥n de RAG",
        "RAG Multimodal: Combinando Texto, Im√°genes y Documentos",
        "Chunking Strategies: Optimizando Datos para RAG",
        "RAG en Tiempo Real: Sistemas de Conocimiento Din√°micos",
        "Evaluando Performance: M√©tricas Clave para Sistemas RAG"
      ],
      "ia-generativa": [
        "Dall-E 3 vs Midjourney vs Stable Diffusion: Comparativa {a√±o}",
        "IA Generativa en Marketing: Creatividad Sin L√≠mites",
        "Generaci√≥n de C√≥digo con IA: El Desarrollador del Futuro",
        "Arte Digital Revolucionario: Cuando la IA Se Vuelve Creativa",
        "Video Generativo: Sora y el Futuro del Contenido Audiovisual",
        "M√∫sica Creada por IA: Compositores Artificiales Emergentes",
        "Copyright y IA Generativa: Navegando Aguas Legales",
        "Workflows Creativos: Integrando IA en Procesos Art√≠sticos"
      ],
      "machine-learning": [
        "AutoML: Democratizando el Aprendizaje Autom√°tico",
        "Deep Learning sin C√≥digo: Herramientas No-Code para ML",
        "MLOps en {a√±o}: DevOps para Modelos de Machine Learning",
        "Edge AI: Llevando Machine Learning a Dispositivos M√≥viles",
        "Federated Learning: ML Distribuido y Privacidad por Dise√±o",
        "Explainable AI: Modelos Transparentes y Comprensibles",
        "Transfer Learning: Reutilizando Conocimiento en ML",
        "ML en la Nube: AWS vs Azure vs Google Cloud"
      ],
      "computer-vision": [
        "Visi√≥n por Computadora en Medicina: Diagn√≥sticos del Futuro",
        "Reconocimiento Facial √âtico: Tecnolog√≠a con Responsabilidad",
        "Computer Vision en Retail: Revolucionando la Experiencia",
        "Realidad Aumentada con IA: Fusionando Mundos Virtuales",
        "Detecci√≥n de Objetos en Tiempo Real: YOLO y M√°s All√°",
        "OCR Inteligente: Extrayendo Datos de Documentos Complejos",
        "An√°lisis de Video con IA: Seguridad y Vigilancia Avanzada",
        "Vision Transformers: La Nueva Era del Procesamiento Visual"
      ],
      nlp: [
        "An√°lisis de Sentimientos: Entendiendo Emociones en Texto",
        "Chatbots Conversacionales: M√°s All√° de las Respuestas Simples",
        "Traducci√≥n Neural: Rompiendo Barreras Idiom√°ticas",
        "NLP Multiling√ºe: Procesando 100+ Idiomas Simult√°neamente",
        "Named Entity Recognition: Extrayendo Informaci√≥n Clave",
        "Summarizaci√≥n Autom√°tica: Condensando Informaci√≥n Masiva",
        "Question Answering: Sistemas que Realmente Comprenden",
        "Text-to-Speech Emocional: Voces Sint√©ticas con Sentimiento"
      ],
      "automatizacion-ia": [
        "RPA + IA: La Automatizaci√≥n Inteligente del Futuro",
        "Workflows Aut√≥nomos: Procesos que Se Optimizan Solos",
        "Automatizaci√≥n de Documentos: De PDF a Datos Estructurados",
        "IA en Manufacturing: F√°bricas Aut√≥nomas e Inteligentes",
        "Process Mining con IA: Descubriendo Ineficiencias Ocultas",
        "Automatizaci√≥n Cognitiva: Cuando los Bots Piensan",
        "No-Code Automation: Automatizaci√≥n Sin Programaci√≥n",
        "Hiperautomatizaci√≥n: El Ecosistema Completo Automatizado"
      ]
    };
    const titulosDisponibles = enfoques[tema.id] || [
      `${tema.nombre}: Innovaciones y Tendencias {a√±o}`,
      `El Futuro de ${tema.nombre}: Perspectivas {a√±o}`,
      `Dominando ${tema.nombre}: Gu√≠a Pr√°ctica Actualizada`,
      `${tema.nombre} en la Pr√°ctica: Casos de Uso Reales`,
      `Revolucionando con ${tema.nombre}: Estrategias Avanzadas`
    ];
    const tituloAleatorio = titulosDisponibles[Math.floor(Math.random() * titulosDisponibles.length)];
    const a√±oActual = (/* @__PURE__ */ new Date()).getFullYear();
    return tituloAleatorio.replace("{a√±o}", a√±oActual.toString());
  }
  /**
   * Genera un blog completo usando Gemini AI con imagen, t√≠tulo √∫nico y contenido din√°mico
   */
  static async generarBlog(temaId) {
    const tema = TEMAS_PREDEFINIDOS.find((t) => t.id === temaId);
    if (!tema) {
      throw new Error("Tema no encontrado");
    }
    try {
      const fechaActual = (/* @__PURE__ */ new Date()).toLocaleDateString("es-ES", {
        year: "numeric",
        month: "long",
        day: "numeric"
      });
      const enfoqueDinamico = this.generarEnfoqueDinamico(tema);
      const estructuraDinamica = this.generarEstructuraDinamica();
      const elementosVariabilidad = this.generarElementosVariabilidad();
      const semillaAleatoria = Math.floor(Math.random() * 1e3);
      const promptPrincipal = `
FECHA ACTUAL: ${fechaActual}
SEMILLA DE VARIACI√ìN: ${semillaAleatoria}

ENFOQUE ESPEC√çFICO PARA ESTE ART√çCULO:
${enfoqueDinamico}

TEMA BASE: ${tema.nombre}
DESCRIPCI√ìN: ${tema.descripcion}

ELEMENTOS ADICIONALES A INCLUIR:
${elementosVariabilidad}

ESTRUCTURA A SEGUIR:
${estructuraDinamica}

REQUISITOS ESPEC√çFICOS:
- Escribe en espa√±ol con un estilo √∫nico y distintivo
- M√≠nimo 1800 palabras para asegurar profundidad
- Usa formato Markdown limpio y profesional
- Informaci√≥n actualizada a ${fechaActual}
- Ejemplos concretos y datos espec√≠ficos
- Tono profesional pero accesible
- Evita frases clich√© o repetitivas
- Cada secci√≥n debe aportar valor √∫nico

DIRECTRICES DE ORIGINALIDAD:
- Comienza con un gancho diferente e inesperado
- Usa analog√≠as creativas para explicar conceptos complejos
- Incluye perspectivas contrarias o debates actuales
- Proporciona insights √∫nicos no encontrados en otros art√≠culos
- Termina con una reflexi√≥n profunda sobre el impacto futuro

IMPORTANTE: 
- Responde SOLO con el art√≠culo en formato Markdown
- NO uses frases gen√©ricas como "La IA ha dejado de ser..."
- S√© espec√≠fico y concreto en cada afirmaci√≥n
- Cada p√°rrafo debe aportar informaci√≥n valiosa y √∫nica
- Evita repetir estructuras de introducci√≥n similares
      `;
      console.log("üéØ Generando contenido con enfoque:", enfoqueDinamico.substring(0, 100) + "...");
      const result = await this.model.generateContent(promptPrincipal);
      let contenido = result.response.text();
      contenido = this.limpiarContenido(contenido);
      const tituloMatch = contenido.match(/^#\s+(.+)$/m);
      const tituloGenerado = tituloMatch ? tituloMatch[1] : null;
      const tituloUnico = await this.generarTituloUnico(tema, fechaActual);
      if (tituloGenerado && tituloGenerado !== tituloUnico) {
        contenido = contenido.replace(/^#\s+.+$/m, `# ${tituloUnico}`);
      }
      const promptResumen = `
Bas√°ndote en este art√≠culo espec√≠fico sobre ${tema.nombre}, genera un resumen de m√°ximo 200 caracteres que capture la esencia √öNICA de este art√≠culo en particular.

Art√≠culo:
${contenido.substring(0, 1e3)}...

El resumen debe:
- Ser espec√≠fico a este art√≠culo, no gen√©rico
- Mencionar el enfoque particular usado
- Ser atractivo para redes sociales
- Evitar frases clich√©

Responde SOLO con el resumen, sin comillas ni texto adicional.
      `;
      const resumenResult = await this.model.generateContent(promptResumen);
      let resumen = resumenResult.response.text().trim();
      resumen = this.limpiarContenido(resumen);
      const imagenURL = await this.generarImagenURL(tema.nombre, tema.keywords);
      const palabras = contenido.split(" ").length;
      const tiempo_lectura = Math.max(1, Math.ceil(palabras / 250));
      console.log("‚úÖ Blog generado con variabilidad m√°xima:", {
        titulo: tituloUnico,
        palabras,
        tiempo_lectura,
        semilla: semillaAleatoria
      });
      return {
        titulo: tituloUnico,
        contenido,
        resumen: resumen.substring(0, 200),
        tags: tema.keywords,
        tiempo_lectura,
        meta_titulo: tituloUnico,
        meta_descripcion: resumen.substring(0, 160),
        imagen_url: imagenURL
      };
    } catch (error) {
      console.error("Error generando blog con Gemini:", error);
      throw new Error("Error al generar el contenido del blog");
    }
  }
  /**
   * üÜï NUEVA FUNCIONALIDAD: Generar enfoques din√°micos y diversos para el contenido
   */
  static generarEnfoqueDinamico(tema) {
    const enfoquesPorTema = {
      "etica-ia": [
        {
          enfoque: "Casos de estudio y ejemplos reales",
          prompt: "Enf√≥cate en casos reales de problemas √©ticos en IA que han ocurrido en empresas como Amazon, Google, Microsoft. Analiza qu√© sali√≥ mal y c√≥mo se solucion√≥. Incluye ejemplos espec√≠ficos de sesgos algor√≠tmicos en contrataci√≥n, reconocimiento facial, y sistemas de justicia.",
          estilo: "narrativo y basado en casos"
        },
        {
          enfoque: "Marco regulatorio y compliance",
          prompt: "Enf√≥cate en las regulaciones actuales como el AI Act de la UE, GDPR, y marcos normativos emergentes. Explica c√≥mo las empresas pueden implementar compliance y qu√© significa para el desarrollo de IA. Incluye requisitos espec√≠ficos y multas por incumplimiento.",
          estilo: "t√©cnico-legal"
        },
        {
          enfoque: "Implementaci√≥n pr√°ctica en empresas",
          prompt: "Enf√≥cate en c√≥mo las empresas pueden implementar √©tica en IA de forma pr√°ctica. Incluye frameworks, herramientas, procesos de auditor√≠a, comit√©s de √©tica, y m√©tricas para medir fairness. Proporciona una gu√≠a paso a paso para CTOs y equipos de desarrollo.",
          estilo: "gu√≠a pr√°ctica"
        },
        {
          enfoque: "Futuro y tendencias emergentes",
          prompt: "Enf√≥cate en las tendencias futuras de √©tica en IA: IA explicable, auditor√≠as autom√°ticas, certificaciones de IA √©tica, impacto social, y c√≥mo evolucionar√° la regulaci√≥n. Analiza qu√© viene despu√©s del AI Act y c√≥mo se preparan las empresas.",
          estilo: "prospectivo y visionario"
        }
      ],
      llm: [
        {
          enfoque: "Comparativa t√©cnica detallada",
          prompt: "Realiza una comparativa t√©cnica profunda entre GPT-4, Claude-3, Gemini-2.0, y otros LLMs. Analiza arquitectura, capacidades, limitaciones, costos, APIs, y casos de uso espec√≠ficos. Incluye benchmarks reales y m√©tricas de performance.",
          estilo: "t√©cnico-comparativo"
        },
        {
          enfoque: "Implementaci√≥n empresarial",
          prompt: "Enf√≥cate en c√≥mo las empresas est√°n implementando LLMs: desde startups hasta Fortune 500. Analiza casos de uso reales, ROI, integraci√≥n con sistemas existentes, desaf√≠os de implementaci√≥n, y lecciones aprendidas.",
          estilo: "business-oriented"
        },
        {
          enfoque: "Desarrollo y fine-tuning",
          prompt: "Enf√≥cate en el aspecto t√©cnico de desarrollo: fine-tuning, prompt engineering, RAG integration, vector databases, embedding strategies, y optimizaci√≥n de performance. Incluye c√≥digo y ejemplos pr√°cticos.",
          estilo: "t√©cnico-pr√°ctico"
        },
        {
          enfoque: "Impacto social y futuro del trabajo",
          prompt: "Analiza c√≥mo los LLMs est√°n transformando el trabajo: automatizaci√≥n de tareas, nuevos roles profesionales, impacto en educaci√≥n, creatividad, y productividad. Discute el futuro del trabajo humano-IA colaborativo.",
          estilo: "sociol√≥gico-prospectivo"
        }
      ],
      rag: [
        {
          enfoque: "Arquitectura e implementaci√≥n t√©cnica",
          prompt: "Enf√≥cate en la arquitectura t√©cnica de RAG: vector databases (Pinecone, Weaviate, Chroma), embedding models, chunking strategies, retrieval algorithms, y optimizaci√≥n de performance. Incluye diagramas y c√≥digo.",
          estilo: "t√©cnico-arquitectural"
        },
        {
          enfoque: "Casos de uso empresariales",
          prompt: "Analiza implementaciones reales de RAG en empresas: chatbots corporativos, sistemas de soporte, knowledge management, an√°lisis de documentos, y customer service. Incluye m√©tricas de √©xito y ROI.",
          estilo: "business cases"
        },
        {
          enfoque: "Comparativa con otras tecnolog√≠as",
          prompt: "Compara RAG vs fine-tuning, RAG vs traditional search, RAG vs knowledge graphs. Analiza cu√°ndo usar cada aproximaci√≥n, ventajas, desventajas, y hybrid approaches.",
          estilo: "comparativo-anal√≠tico"
        },
        {
          enfoque: "Mejores pr√°cticas y optimizaci√≥n",
          prompt: "Enf√≥cate en mejores pr√°cticas: data preparation, chunk optimization, retrieval tuning, evaluation metrics, monitoring, y troubleshooting. Proporciona una gu√≠a completa de implementaci√≥n.",
          estilo: "gu√≠a de mejores pr√°cticas"
        }
      ]
    };
    const enfoques = enfoquesPorTema[tema.id] || [
      {
        enfoque: "An√°lisis t√©cnico profundo",
        prompt: `Enf√≥cate en los aspectos t√©cnicos avanzados de ${tema.nombre}. Incluye implementaciones, herramientas, frameworks, y ejemplos de c√≥digo pr√°cticos.`,
        estilo: "t√©cnico-profundo"
      },
      {
        enfoque: "Casos de uso empresariales",
        prompt: `Analiza c√≥mo las empresas est√°n implementando ${tema.nombre} en el mundo real. Incluye casos de √©xito, ROI, y lecciones aprendidas.`,
        estilo: "business-oriented"
      },
      {
        enfoque: "Tendencias y futuro",
        prompt: `Explora las tendencias emergentes y el futuro de ${tema.nombre}. Analiza hacia d√≥nde se dirige la tecnolog√≠a y qu√© viene despu√©s.`,
        estilo: "prospectivo"
      }
    ];
    const enfoqueSeleccionado = enfoques[Math.floor(Math.random() * enfoques.length)];
    return enfoqueSeleccionado.prompt;
  }
  /**
   * üÜï NUEVA FUNCIONALIDAD: Generar variaciones de estructura del art√≠culo
   */
  static generarEstructuraDinamica() {
    const estructuras = [
      {
        nombre: "Estructura Cl√°sica",
        template: `
# [T√≠tulo del Art√≠culo]

## Introducci√≥n
[Contextualiza el tema y explica por qu√© es importante ahora]

## Fundamentos y Conceptos Clave
[Explica los conceptos b√°sicos de manera clara]

## Estado Actual y Tendencias
[Analiza la situaci√≥n actual y tendencias emergentes]

## Casos de Uso y Aplicaciones Pr√°cticas
[Proporciona ejemplos reales y casos de uso]

## Desaf√≠os y Consideraciones
[Discute los principales retos y limitaciones]

## Futuro y Perspectivas
[Analiza hacia d√≥nde se dirige la tecnolog√≠a]

## Conclusi√≥n
[Resume los puntos clave y proporciona reflexiones finales]`
      },
      {
        nombre: "Estructura Problem-Solution",
        template: `
# [T√≠tulo del Art√≠culo]

## El Problema que Estamos Enfrentando
[Define claramente el problema o desaf√≠o actual]

## ¬øPor Qu√© Importa Ahora?
[Explica la urgencia y relevancia del problema]

## La Soluci√≥n: [Tema Principal]
[Introduce la tecnolog√≠a/concepto como soluci√≥n]

## C√≥mo Funciona en la Pr√°ctica
[Explica la implementaci√≥n y funcionamiento]

## Casos de √âxito Reales
[Proporciona ejemplos espec√≠ficos de implementaciones exitosas]

## Obst√°culos y C√≥mo Superarlos
[Identifica desaf√≠os comunes y estrategias para resolverlos]

## Implementaci√≥n: Pasos Siguientes
[Gu√≠a pr√°ctica para comenzar]

## Conclusi√≥n y Llamada a la Acci√≥n
[Resume y motiva a la acci√≥n]`
      },
      {
        nombre: "Estructura Comparativa",
        template: `
# [T√≠tulo del Art√≠culo]

## Panorama Actual del Sector
[Establece el contexto y landscape actual]

## Opci√≥n A vs Opci√≥n B vs [Tema Principal]
[Compara diferentes aproximaciones o tecnolog√≠as]

## Ventajas Competitivas de [Tema Principal]
[Destaca los beneficios √∫nicos]

## Cu√°ndo Usar Cada Aproximaci√≥n
[Proporciona criterios de decisi√≥n]

## An√°lisis de Costos y ROI
[Compara aspectos econ√≥micos]

## Estudios de Caso Comparativos
[Ejemplos reales de diferentes implementaciones]

## Recomendaciones Basadas en Escenarios
[Gu√≠a para diferentes situaciones empresariales]

## Conclusi√≥n: La Mejor Estrategia para Ti
[Personaliza las recomendaciones]`
      },
      {
        nombre: "Estructura de Gu√≠a Paso a Paso",
        template: `
# [T√≠tulo del Art√≠culo]

## Antes de Comenzar: Lo Que Necesitas Saber
[Prerrequisitos y contexto necesario]

## Paso 1: Evaluaci√≥n y Preparaci√≥n
[Primera fase de implementaci√≥n]

## Paso 2: Dise√±o y Planificaci√≥n
[Planificaci√≥n detallada del proyecto]

## Paso 3: Implementaci√≥n Inicial
[Primeros pasos pr√°cticos]

## Paso 4: Optimizaci√≥n y Ajustes
[Mejora y refinamiento]

## Paso 5: Escalamiento y Producci√≥n
[Llevar la soluci√≥n a gran escala]

## Errores Comunes y C√≥mo Evitarlos
[Lecciones aprendidas y pitfalls]

## Herramientas y Recursos Recomendados
[Stack tecnol√≥gico y recursos √∫tiles]

## Pr√≥ximos Pasos y Evoluci√≥n
[C√≥mo continuar mejorando]`
      }
    ];
    const estructuraSeleccionada = estructuras[Math.floor(Math.random() * estructuras.length)];
    return estructuraSeleccionada.template;
  }
  /**
   * üÜï NUEVA FUNCIONALIDAD: Generar elementos de variabilidad adicional
   */
  static generarElementosVariabilidad() {
    const elementos = [
      "Incluye estad√≠sticas y datos espec√≠ficos de 2025",
      "Menciona herramientas y empresas reales del sector",
      "Incorpora citas de expertos reconocidos en el campo",
      "Agrega ejemplos de c√≥digo o implementaci√≥n cuando sea relevante",
      "Incluye m√©tricas de performance y benchmarks",
      "Menciona regulaciones y compliance relevantes",
      "Incorpora an√°lisis de costos y ROI",
      "Agrega perspectivas de diferentes industrias",
      "Incluye roadmap y timeline de implementaci√≥n",
      "Menciona riesgos y mitigaciones espec√≠ficas"
    ];
    const elementosSeleccionados = elementos.sort(() => 0.5 - Math.random()).slice(0, Math.floor(Math.random() * 2) + 3);
    return elementosSeleccionados.map((elemento) => `- ${elemento}`).join("\n");
  }
  /**
   * Generar slug a partir del t√≠tulo
   */
  static generarSlug(titulo) {
    return titulo.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/[^a-z0-9\s-]/g, "").trim().replace(/\s+/g, "-").replace(/-+/g, "-").substring(0, 50);
  }
  /**
   * Obtener tema por ID
   */
  static obtenerTema(temaId) {
    return TEMAS_PREDEFINIDOS.find((t) => t.id === temaId);
  }
}

const POST = async ({ request }) => {
  try {
    const { temaId } = await request.json();
    if (!temaId) {
      return new Response(JSON.stringify({ error: "Tema ID es requerido" }), {
        status: 400,
        headers: { "Content-Type": "application/json" }
      });
    }
    const tema = GeminiAIService.obtenerTema(temaId);
    if (!tema) {
      return new Response(JSON.stringify({ error: "Tema no encontrado" }), {
        status: 404,
        headers: { "Content-Type": "application/json" }
      });
    }
    const tiempoInicio = Date.now();
    const fechaInicio = (/* @__PURE__ */ new Date()).toISOString();
    console.log(`ü§ñ Generando blog sobre: ${tema.nombre}...`);
    const blogGenerado = await GeminiAIService.generarBlog(temaId);
    const tiempoFin = Date.now();
    const fechaFin = (/* @__PURE__ */ new Date()).toISOString();
    const tiempoGeneracionMs = tiempoFin - tiempoInicio;
    const tituloLimitado = blogGenerado.titulo.length > 60 ? blogGenerado.titulo.substring(0, 57) + "..." : blogGenerado.titulo;
    const baseSlug = GeminiAIService.generarSlug(tituloLimitado);
    const timestamp = Date.now().toString().slice(-6);
    const slugCompleto = `${baseSlug}-${timestamp}`;
    const slug = slugCompleto.length > 60 ? slugCompleto.substring(0, 60) : slugCompleto;
    const categorias = await BlogService.obtenerCategorias();
    let categoriaId = categorias.find((c) => c.slug === "ia")?.id;
    if (!categoriaId && categorias.length > 0) {
      categoriaId = categorias[0].id;
    }
    const autorCompleto = `ü§ñ IA - ${tema.nombre}`;
    const autor = autorCompleto.length > 60 ? autorCompleto.substring(0, 57) + "..." : autorCompleto;
    const nuevoPost = await BlogService.crearPost({
      titulo: tituloLimitado,
      slug,
      resumen: blogGenerado.resumen.substring(0, 200),
      // Limitar resumen tambi√©n
      contenido: blogGenerado.contenido,
      categoria_id: categoriaId,
      tiempo_lectura: blogGenerado.tiempo_lectura,
      tags: blogGenerado.tags,
      publicado: true,
      destacado: false,
      meta_titulo: (blogGenerado.meta_titulo || tituloLimitado).substring(0, 60),
      meta_descripcion: (blogGenerado.meta_descripcion || blogGenerado.resumen).substring(0, 160),
      autor,
      imagen_url: blogGenerado.imagen_url
      // üñºÔ∏è Nueva propiedad agregada
    });
    if (nuevoPost && nuevoPost.id) {
      try {
        await BlogService.registrarMetricasLLM({
          post_id: nuevoPost.id,
          modelo_usado: "gemini-2.0-flash",
          proveedor: "Google",
          version_modelo: "2.0-flash",
          // M√©tricas de tiempo
          tiempo_generacion_ms: tiempoGeneracionMs,
          tiempo_inicio: fechaInicio,
          tiempo_fin: fechaFin,
          // Contexto de generaci√≥n
          tema_seleccionado: tema.nombre,
          prompt_sistema: "Sistema de generaci√≥n de blogs con Gemini AI",
          prompt_usuario: tema.prompt,
          // Calidad estimada (basada en longitud del contenido)
          calidad_estimada: blogGenerado.contenido.length > 1500 ? 5 : blogGenerado.contenido.length > 1e3 ? 4 : 3,
          requiere_revision: false,
          // Metadatos adicionales
          metadata_llm: {
            tema_id: temaId,
            palabras_generadas: blogGenerado.contenido.split(" ").length,
            caracteres_generados: blogGenerado.contenido.length,
            tiempo_lectura_calculado: blogGenerado.tiempo_lectura
          }
        });
        console.log(`üìä M√©tricas LLM registradas para el post: ${nuevoPost.id}`);
      } catch (errorMetricas) {
        console.error("‚ö†Ô∏è Error registrando m√©tricas LLM:", errorMetricas);
      }
    }
    console.log(`‚úÖ Blog generado exitosamente: ${tituloLimitado} (${tiempoGeneracionMs}ms)`);
    return new Response(
      JSON.stringify({
        success: true,
        post: nuevoPost,
        tema: tema.nombre,
        mensaje: `¬°Blog sobre "${tema.nombre}" generado exitosamente!`,
        metricas: {
          tiempo_generacion_ms: tiempoGeneracionMs,
          palabras: blogGenerado.contenido.split(" ").length
        }
      }),
      {
        status: 200,
        headers: { "Content-Type": "application/json" }
      }
    );
  } catch (error) {
    console.error("Error generando blog:", error);
    return new Response(
      JSON.stringify({
        error: "Error interno del servidor al generar el blog",
        details: error instanceof Error ? error.message : "Error desconocido"
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json" }
      }
    );
  }
};

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  POST
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
